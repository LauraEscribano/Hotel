<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Clientes | Admin</title>
  <!-- Bootstrap & FontAwesome -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet">
  <!-- DataTables Bootstrap 5 -->
  <link href="https://cdn.datatables.net/v/bs5/dt-1.13.8/datatables.min.css" rel="stylesheet">
  <link rel="stylesheet" href="/css/admin.css" />
  <link rel="stylesheet" href="/css/style.css" />
</head>

<body>

  <%- include('../partials/adminPanel') %>

    <main class="container-fluid pt-5">
      <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="h3 m-0"><i class="fas fa-users me-2"></i>Clientes</h1>
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#newClientModal">
          <i class="fas fa-user-plus me-1"></i>Nuevo cliente
        </button>
      </div>

      <table id="tblClients" class="table table-striped table-bordered w-100">
        <thead>
          <tr>
            <th>#</th>
            <th>Nombre</th>
            <th>Apellidos</th>
            <th>F. Nac.</th>
            <th>DNI</th>
            <th>Email</th>
            <th>Teléfono</th>
            <th>Calle</th>
            <th>Nº</th>
            <th>Piso</th>
            <th>Ciudad</th>
            <th>País</th>
            <th>CP</th>
            <th>Estado</th>
            <th>Actualizado</th>
            <th>Acciones</th>
          </tr>
        </thead>
        <tbody>
          <% clients.forEach((c, idx)=> { %>
            <tr>
              <td>
                <%= idx + 1 %>
              </td>
              <td>
                <%= c.nom %>
              </td>
              <td>
                <%= c.cognoms %>
              </td>
              <td>
                <%= c.data_naixement ? formatDate(c.data_naixement) : '—' %>
              </td>
              <td>
                <%= c.dni || '—' %>
              </td>
              <td>
                <%= c.email || '—' %>
              </td>
              <td>
                <%= c.telefon || '—' %>
              </td>
              <td>
                <%= c.carrer || '—' %>
              </td>
              <td>
                <%= c.numero || '—' %>
              </td>
              <td>
                <%= c.pis || '—' %>
              </td>
              <td>
                <%= c.ciutat || '—' %>
              </td>
              <td data-pais-id="<%= c.idPais %>">
                <%= c.paisos ? c.paisos.pais : '—' %>
              </td>
              <td>
                <%= c.codi_postal || '—' %>
              </td>
              <td class="text-center">
                <% if (c.actiu) { %>
                  <span class="badge bg-success">Activado</span>
                  <% } else { %>
                    <span class="badge bg-secondary">Desactivado</span>
                    <% } %>
              </td>
              <td>
                <%= formatDate(c.data_actualitzacio) %>
              </td>
              <td class="text-center">
                <button class="btn btn-sm btn-outline-primary btn-edit" data-id="<%= c.idClient %>"
                  title="Editar (WIP)"><i class="fas fa-edit"></i></button>
                <!-- Botón genérico para activar/desactivar -->
                <button type="button" class="btn btn-sm btn-outline-secondary btn-toggle" data-id="<%= c.idClient %>"
                  data-nom="<%= c.nom %>" data-cognoms="<%= c.cognoms %>" data-dni="<%= c.dni %>"
                  data-actiu="<%= c.actiu %>">
                  <i class="fas <%= c.actiu ? 'fa-user-slash' : 'fa-user-check' %>"></i>
                </button>
              </td>
            </tr>
            <% }) %>
        </tbody>
      </table>
    </main>

    <!-- ========= Modal Nuevo / Editar Cliente ========= -->
    <div class="modal fade" id="newClientModal" tabindex="-1" aria-labelledby="newClientModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-lg">
        <form id="frmClient" class="modal-content">
          <!-- Campo oculto: solo relleno cuando EDITO -->
          <input type="hidden" name="idClient" id="idClient">
          <div id="modalAlert" class="px-4 pt-3"></div>
          <div class="modal-header">
            <h5 class="modal-title" id="newClientModalLabel">Nuevo cliente</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
          </div>

          <div class="modal-body">
            <div class="row g-3">

              <div class="col-md-6">
                <label for="nom" class="form-label">Nombre *</label>
                <input type="text" id="nom" name="nom" class="form-control" required>
              </div>

              <div class="col-md-6">
                <label for="cognoms" class="form-label">Apellidos *</label>
                <input type="text" id="cognoms" name="cognoms" class="form-control" required>
              </div>

              <div class="col-md-4">
                <label for="data_naixement" class="form-label">Fecha nacimiento</label>
                <input type="date" id="data_naixement" name="data_naixement" class="form-control">
              </div>

              <div class="col-md-4">
                <label for="dni" class="form-label">DNI</label>
                <input type="text" id="dni" name="dni" class="form-control">
              </div>

              <div class="col-md-4">
                <label for="telefon" class="form-label">Teléfono</label>
                <input type="text" id="telefon" name="telefon" class="form-control">
              </div>

              <div class="col-md-6">
                <label for="email" class="form-label">Email</label>
                <input type="email" id="email" name="email" class="form-control">
              </div>

              <div class="col-md-6">
                <label for="carrer" class="form-label">Calle</label>
                <input type="text" id="carrer" name="carrer" class="form-control">
              </div>

              <div class="col-md-3">
                <label for="numero" class="form-label">Número</label>
                <input type="text" id="numero" name="numero" class="form-control">
              </div>

              <div class="col-md-3">
                <label for="pis" class="form-label">Piso</label>
                <input type="text" id="pis" name="pis" class="form-control">
              </div>

              <div class="col-md-4">
                <label for="ciutat" class="form-label">Ciudad</label>
                <input type="text" id="ciutat" name="ciutat" class="form-control">
              </div>

              <div class="col-md-4">
                <label for="idPais" class="form-label">País</label>
                <select id="idPais" name="idPais" class="form-select">
                  <option value="">— Selecciona país —</option>
                  <% countries.forEach(p=> { %>
                    <option value="<%= p.idPais %>">
                      <%= p.pais %>
                    </option>
                    <% }) %>
                </select>
              </div>

              <div class="col-md-4">
                <label for="codi_postal" class="form-label">Código postal</label>
                <input type="text" id="codi_postal" name="codi_postal" class="form-control">
              </div>

            </div> <!-- row g-3 -->
          </div> <!-- modal-body -->

          <div class="modal-footer">
            <button type="submit" class="btn btn-success" id="btnSave">
              Guardar
            </button>
          </div>
        </form>
      </div>
    </div>
    <!-- ========= Modal Confirmar Activación/Desactivación ========= -->
    <div class="modal fade" id="confirmModal" tabindex="-1" aria-labelledby="confirmModalLabel" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="confirmModalLabel">Confirmar acción</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
          </div>
          <div class="modal-body">
            <p id="confirmText"></p>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Cancelar</button>
            <button type="button" id="btnConfirmToggle" class="btn btn-primary">Confirmar</button>
          </div>
        </div>
      </div>
    </div>

    <%- include('../partials/footer') %>

      <!-- ========= JS (orden correcto) ========= -->
      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
      <!-- jQuery -->
      <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
      <!-- DataTables núcleo + Bootstrap 5 skin -->
      <script src="https://cdn.datatables.net/1.13.8/js/jquery.dataTables.min.js"></script>
      <script src="https://cdn.datatables.net/1.13.8/js/dataTables.bootstrap5.min.js"></script>

      <script>
        // ---------- inicializar DataTable ----------
        const dt = new DataTable('#tblClients', {
          language: { url: 'https://cdn.datatables.net/plug-ins/1.13.8/i18n/es-ES.json' },
          createdRow: function (row, data, index) {
            // Añade 'text-center' a las celdas en los índices 
            $('td:eq(13), td:eq(15)', row).addClass('text-center');
          }
        });

        const modal = document.getElementById('newClientModal');
        const form = document.getElementById('frmClient');
        const bsModal = new bootstrap.Modal(modal);
        const btnSave = document.getElementById('btnSave');

        // ---------- abrir modal en modo ALTA ----------
        document.querySelector('[data-bs-target="#newClientModal"]')
          .addEventListener('click', () => {
            form.reset();
            form.idClient.value = '';
            form.dataset.mode = 'create';
            modal.querySelector('.modal-title').textContent = 'Nuevo cliente';
          });

        // ---------- abrir modal en modo EDICIÓN ----------
        document.getElementById('tblClients').addEventListener('click', e => {
          if (!e.target.closest('.btn-edit')) return;

          const btn = e.target.closest('.btn-edit');
          const row = btn.closest('tr');
          const cells = row.children;

          // Rellenar el formulario
          form.idClient.value = btn.dataset.id;
          form.nom.value = cells[1].textContent.trim();
          form.cognoms.value = cells[2].textContent.trim();
          form.data_naixement.value = cells[3].textContent.trim() === '—' ? '' : cells[3].textContent.trim();
          form.dni.value = cells[4].textContent.trim() === '—' ? '' : cells[4].textContent.trim();
          form.email.value = cells[5].textContent.trim() === '—' ? '' : cells[5].textContent.trim();
          form.telefon.value = cells[6].textContent.trim() === '—' ? '' : cells[6].textContent.trim();
          form.carrer.value = cells[7].textContent.trim() === '—' ? '' : cells[7].textContent.trim();
          form.numero.value = cells[8].textContent.trim() === '—' ? '' : cells[8].textContent.trim();
          form.pis.value = cells[9].textContent.trim() === '—' ? '' : cells[9].textContent.trim();
          form.ciutat.value = cells[10].textContent.trim() === '—' ? '' : cells[10].textContent.trim();
          form.idPais.value = cells[11].dataset.paisId || '';   // 11 según tu orden
          form.codi_postal.value = cells[12].textContent.trim() === '—' ? '' : cells[12].textContent.trim();
          // … resto de campos …

          form.dataset.mode = 'edit';
          modal.querySelector('.modal-title').textContent = 'Editar cliente';
          bsModal.show();
        });

        const alertDiv = document.getElementById('modalAlert');
        // ---------- enviar ALTA o EDICIÓN ----------
        form.addEventListener('submit', async evt => {
          evt.preventDefault();
          // 1) limpiar alertas previas
          alertDiv.innerHTML = '';

          const data = Object.fromEntries(new FormData(form).entries());
          const mode = form.dataset.mode;
          const id = data.idClient;

          const url = mode === 'edit' ? `/admin/clients/${id}` : '/admin/clients';
          const method = mode === 'edit' ? 'PUT' : 'POST';

          try {
            const res = await fetch(url, {
              method,
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify(data)
            });

            // 2) manejar error de validación
            if (!res.ok) {
              const { error } = await res.json();
              alertDiv.innerHTML = `
              <div class="alert alert-danger" role="alert">
                ${error}
              </div>`;
              return;
            }

            // 3) éxito: parsear cliente devuelto
            const cli = await res.json();

            // construir badge
            const badge = cli.actiu
              ? '<span class="badge bg-success">Activado</span>'
              : '<span class="badge bg-secondary">Desactivado</span>';

            // construimos el HTML de los botones usando CLI en vez de c/EJS
            const editBtn = `
            <button class="btn btn-sm btn-outline-primary btn-edit"
                    data-id="${cli.idClient}">
              <i class="fas fa-edit"></i>
            </button>`;

            const toggleBtn = `
            <button type="button"
                    class="btn btn-sm btn-outline-secondary btn-toggle"
                    data-id="${cli.idClient}"
                    data-nom="${cli.nom}"
                    data-cognoms="${cli.cognoms}"
                    data-dni="${cli.dni}"
                    data-actiu="${cli.actiu}">
              <i class="fas ${cli.actiu ? 'fa-user-slash' : 'fa-user-check'}"></i>
            </button>`;

            if (mode === 'create') {
              // añadir fila nueva
              dt.row.add([
                dt.rows().count() + 1,
                cli.nom,
                cli.cognoms,
                cli.data_naixement
                  ? new Date(cli.data_naixement).toISOString().slice(0, 10)
                  : '—',
                cli.dni || '—',
                cli.email || '—',
                cli.telefon || '—',
                cli.carrer || '—',
                cli.numero || '—',
                cli.pis || '—',
                cli.ciutat || '—',
                cli.paisos?.pais || '—',
                cli.codi_postal || '—',
                badge,
                cli.data_actualitzacio
                  ? new Date(cli.data_actualitzacio).toISOString().slice(0, 10)
                  : '—',
                `${editBtn}${toggleBtn}`
              ]).draw(false);

              // añadir data-pais-id en la nueva fila
              const idx = dt.rows().count() - 1;
              const node = dt.row(idx).node();
              const countryTd = node.querySelector('td:nth-child(12)');
              if (countryTd) countryTd.dataset.paisId = cli.idPais ?? '';

              // 4) mostrar mensaje de éxito con “Crear otro”
              alertDiv.innerHTML = `
        <div class="alert alert-success d-flex justify-content-between align-items-center" role="alert">
          Cliente creado correctamente.
          < type="button" id="btnNew" class="btn btn-sm btn-link">Crear otro</
        </div>`;

              // limpiar campos y preparar para nuevo alta
              form.reset();
              form.idClient.value = '';
              form.dataset.mode = 'create';
              modal.querySelector('.modal-title').textContent = 'Nuevo cliente';

              // listener para “Crear otro”
              document.getElementById('btnNew').addEventListener('click', () => {
                alertDiv.innerHTML = '';
                form.reset();
              });

            } else {
              // editar fila existente
              const btnEd = [...document.querySelectorAll('.btn-edit')]
                .find(b => b.dataset.id == id);
              const row = btnEd.closest('tr');

              row.cells[1].textContent = cli.nom;
              row.cells[2].textContent = cli.cognoms;
              row.cells[3].textContent = cli.data_naixement ? cli.data_naixement.slice(0, 10) : '—';
              row.cells[4].textContent = cli.dni ?? '—';
              row.cells[5].textContent = cli.email ?? '—';
              row.cells[6].textContent = cli.telefon ?? '—';
              row.cells[7].textContent = cli.carrer ?? '—';
              row.cells[8].textContent = cli.numero ?? '—';
              row.cells[9].textContent = cli.pis ?? '—';
              row.cells[10].textContent = cli.ciutat ?? '—';
              row.cells[11].textContent = cli.paisos?.pais ?? '—';
              row.cells[11].dataset.paisId = cli.idPais ?? '';
              row.cells[12].textContent = cli.codi_postal ?? '—';
              row.cells[13].innerHTML = badge;
              row.cells[14].textContent = cli.data_actualitzacio.slice(0, 10);

              // 5) mensaje de éxito en edición
              alertDiv.innerHTML = `
        <div class="alert alert-success" role="alert">
          Cliente actualizado correctamente.
        </div>`;

              // no cerramos el modal, permitimos al usuario revisar
            }

          } catch (err) {
            // error de red u otro imprevisto
            alertDiv.innerHTML = `
      <div class="alert alert-danger" role="alert">
        ${err.message}
      </div>`;
          }
        });

        // cuando el modal se oculta, limpiamos cualquier alerta previa
        modal.addEventListener('hidden.bs.modal', () => {
          alertDiv.innerHTML = '';
        });

        // referencias al modal de confirmación (que ya tienes)
        const confirmModalEl = document.getElementById('confirmModal');
        const confirmModal = new bootstrap.Modal(confirmModalEl);
        const confirmText = document.getElementById('confirmText');
        const btnConfirm = document.getElementById('btnConfirmToggle');

        let pending = { id: null, activate: null, button: null };

        // 1) al clicar el botón toggle
        document.getElementById('tblClients').addEventListener('click', e => {
          const btn = e.target.closest('.btn-toggle');
          if (!btn) return;

          // recogen datos del button
          const id = btn.dataset.id;
          const nom = btn.dataset.nom;
          const cognoms = btn.dataset.cognoms;
          const dni = btn.dataset.dni;
          const isActive = btn.dataset.actiu === 'true';
          const activate = !isActive;

          // preparar texto de confirmación
          confirmText.textContent = activate
            ? `¿Desea ACTIVAR al cliente ${nom} ${cognoms} (DNI ${dni})?`
            : `¿Desea DESACTIVAR al cliente ${nom} ${cognoms} (DNI ${dni})?`;

          pending = { id, activate, button: btn };
          confirmModal.show();
        });

        // 2) al confirmar en el modal
        btnConfirm.addEventListener('click', async () => {
          const { id, activate, button } = pending;
          try {
            const res = await fetch(`/admin/clients/${id}`, {
              method: 'PUT',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ actiu: activate })
            });
            if (!res.ok) throw new Error('No se pudo cambiar el estado.');

            const cli = await res.json();

            // actualizar botón: icono y data-actiu
            button.dataset.actiu = cli.actiu;
            button.querySelector('i').className =
              `fas ${cli.actiu ? 'fa-user-slash' : 'fa-user-check'}`;

            // actualizar badge de estado (columna 13)
            const row = button.closest('tr');
            row.cells[13].innerHTML = cli.actiu
              ? '<span class="badge bg-success">Activado</span>'
              : '<span class="badge bg-secondary">Desactivado</span>';

          } catch (err) {
            // mostrar error dentro del modal
            const errDiv = document.createElement('div');
            errDiv.className = 'alert alert-danger mt-2';
            errDiv.textContent = err.message;
            confirmModalEl.querySelector('.modal-body').appendChild(errDiv);
          } finally {
            confirmModal.hide();
          }
        });


      </script>

</body>

</html>